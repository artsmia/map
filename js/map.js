//@ sourceMappingURL=map.map
// Generated by CoffeeScript 1.6.1
var Map, Markers;

Map = {
  init: function(url) {
    var x;
    if (url == null) {
      url = 'galleries.json';
    }
    x = new XMLHttpRequest;
    x.open('get', url);
    x.send();
    return x.onreadystatechange = function() {
      if (x.readyState === 4) {
        Markers.all = JSON.parse(x.responseText);
        return Map.mark();
      }
    };
  },
  mark: function() {
    var gallery, mark, _i, _len, _ref, _results;
    if (gallery = window.location.hash.match(/(\d+)/)) {
      Markers.clear();
      return Markers.add(gallery[1]).scrollIntoViewIfNeeded();
    } else {
      _ref = Object.keys(Markers.all);
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        mark = _ref[_i];
        _results.push(Markers.add(mark, true));
      }
      return _results;
    }
  }
};

Markers = {
  build: function(x, y, stroked) {
    var m;
    if (stroked == null) {
      stroked = false;
    }
    m = document.createElement('span');
    m.classList.add('marker');
    if (stroked) {
      m.classList.add('stroked');
    }
    m.style.left = x;
    m.style.top = y;
    return m;
  },
  add: function(id, stroked) {
    var floor, x, y, _ref;
    if (stroked == null) {
      stroked = false;
    }
    _ref = Markers.all[id], x = _ref[0], y = _ref[1];
    floor = document.getElementById(id[0]);
    return floor.appendChild(this.build(x, y, stroked));
  },
  clear: function() {
    var d, _results;
    _results = [];
    while (d = document.querySelector('.marker')) {
      _results.push(d.parentNode.removeChild(d));
    }
    return _results;
  }
};

Map.init();

window.addEventListener("hashchange", Map.mark, false);
